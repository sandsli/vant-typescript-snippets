{
	"Vuex:store": {
		"scope": "typescript",
		"prefix": "vuexStore",
		"body": [
			"import Vue from \"vue\";",
			"import Vuex, { StoreOptions } from \"vuex\";",
			"import { 组件1 } from \"./modules/组件1\";",
			"import { 组件2 } from \"./modules/组件2\";",
			"",
			"Vue.use(Vuex);",
			"",
			"export interface IRootState {",
			"\t version: string;",
			"}",
			"",
			"const store: StoreOptions<IRootState> = {",
			"\t state: { version: \"1.0.0\" },",
			"\t modules: {",
			"\t\t 组件1,",
			"\t\t 组件2",
			"\t }",
			"};",
			"",
			"export default new Vuex.Store<IRootState>(store);"
		],
		"description": "vuex store文件基础模板 \r vuex项目结构 \r store \r-store.ts \r-modules \r--组件1.ts \r--组件2.ts"
	},
	"Vuex:Base": {
		"prefix": "vuexModule",
		"scope": "typescript",
		"body": [
			"import { Module, GetterTree, ActionTree, MutationTree } from \"vuex\";",
			"import { IRootState } from \"../../store\";",
			"",
			"const namespaced: boolean = true;",
			"",
			"interface IState {",
			"\t name: string;",
			"\t count: number;",
			"}",
			"",
			"const state: IState = {",
			"\t name: ",
			"\t count:0",
			"};",
			"const getters: GetterTree<IState, IRootState> = {",
			"\t getname: (state) => state.name",
			"};",
			"",
			"// 处理同步方法",
			"const mutations: MutationTree<IState> = {",
			"\t setName: (state, name) => {",
			"\t\t state.name = name;",
			"\t },",
			"\t setCount: (state, count) => {",
			"\t\t state.count = count;",
			"\t }",
			"};",
			"",
			"const actions: ActionTree<IState, IRootState> = {",
			"\t SetName: (context, payload) => {",
			"\t\t context.commit(\"setName\", payload.name);",
			"\t\t // to do 业务",
			"\t\t // localStorage.setItem(\"数据key\", JSON.stringify({ payload.name }));",
			"}",
			"};",
			"",
			"export const 组件名: Module<IState, IRootState> = {",
			"\t namespaced,",
			"\t state,",
			"\t getters,// this.$store.getters[\"modulename/gettername\"] 来调用",
			"\t actions,// this.$store.dispatch(\"moduleaneme/actionname\", [value]) 来调用",
			"\t mutations",
			"};"
		],
		"description": "vuex typescript 基础模板"
	}
}